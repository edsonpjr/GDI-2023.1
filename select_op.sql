-- Group By/ Having

SELECT MOVIE_NAME, AVG(GRADE) AS AVERAGE_GRADE
FROM REVIEW_
JOIN MOVIE ON REVIEW_.ID_MOVIE = MOVIE.ID
GROUP BY MOVIE_NAME
HAVING AVG(GRADE) > 8;

-- Junção interna
SELECT MOVIE_NAME, TEXT AS CRITIC_REVIEW
FROM MOVIE
JOIN CRITICS_REVIEW ON MOVIE.ID = CRITICS_REVIEW.ID_MOVIE;


-- Junção externa
SELECT MOVIE_NAME, TEXT AS CRITIC_REVIEW
FROM MOVIE
LEFT JOIN CRITICS_REVIEW ON MOVIE.ID = CRITICS_REVIEW.ID_MOVIE;

-- Semi Junção
SELECT DISTINCT ID_USER, NICK
FROM REVIEW_
JOIN USER_ ON REVIEW_.ID_USER = USER_.ID;

-- Anti Junção
SELECT ID, NICK
FROM USER_
WHERE ID NOT IN (SELECT DISTINCT ID_USER FROM REVIEW_);

-- Subconsulta do tipo escalar
SELECT MOVIE_NAME, 
    (SELECT AVG(GRADE) FROM REVIEW_ WHERE REVIEW_.ID_MOVIE = MOVIE.ID) AS AVERAGE_GRADE
FROM MOVIE;


-- Subconsulta do tipo linha
SELECT MOVIE_NAME, 
    (SELECT TEXT FROM CRITICS_REVIEW WHERE CRITICS_REVIEW.ID_MOVIE = MOVIE.ID) AS CRITIC_REVIEW,
    (SELECT AVG(GRADE) FROM REVIEW_ WHERE REVIEW_.ID_MOVIE = MOVIE.ID) AS AVERAGE_GRADE
FROM MOVIE
WHERE EXISTS (SELECT 1 FROM CRITICS_REVIEW WHERE CRITICS_REVIEW.ID_MOVIE = MOVIE.ID);


-- Subconsulta do tipo tabela
SELECT U.NICK, U.EMAIL
FROM USER_ U
WHERE U.ID IN (
    SELECT W.ID_USER
    FROM (
        SELECT ID_USER, COUNT(*) AS NUM_WATCHED
        FROM WATCHES_
        GROUP BY ID_USER
    ) W
    WHERE W.NUM_WATCHED > 5
);

-- Operação de conjunto
SELECT MOVIE_NAME
FROM MOVIE
INNER JOIN (
    SELECT ID_MOVIE FROM REVIEW_
    INTERSECT
    SELECT ID_MOVIE FROM CRITICS_REVIEW
) INTERSECTION_MOVIES ON MOVIE.ID = INTERSECTION_MOVIES.ID_MOVIE;

